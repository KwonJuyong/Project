pipeline {
    agent any

    environment {
        COMPOSE_FILE = "docker-compose-test-server.yml"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'test-branch', credentialsId: 'junyg418_github-ssh', url: 'git@github.com:LabChain/aprofi_backend.git'
            }
        }
        stage('Create .env File') {
            steps {
                withCredentials([file(credentialsId: 'env_file_aprofi', variable: 'ENV_FILE')]) {
                sh 'cp $ENV_FILE .env'
                }
            }
        }
        stage('Download Required Docker Images') {
            steps {
                sh "docker pull python:3.11"
                sh "docker pull gcc:latest"
            }
        }

        stage('Build & Run FastAPI') {
            steps {
                sh "docker-compose -f $COMPOSE_FILE down"
                sh "docker-compose -f $COMPOSE_FILE up -d --build"
            }
        }
        stage('Cleanup') {
            steps {
                sh "docker system prune -af"
            }
        }
        stage('Debug - API Health Check') {
            steps {
                script {
                    sh 'curl -f http://localhost:7999 || echo "API is not responding"'
                }
            }
        }
        stage('Debug - DB Connection Check') {
            steps {
                script {
                    sh 'docker exec aprofi_postgres_test_server psql -U labchain_test -d aprofi_test_db -c "SELECT 1;" || echo "DB Connection Failed"'
                }
            }
        }
    }
    post {
        success {
            echo "âœ… Build completed successfully!"
        }
        failure {
            script {
                echo "ðŸš¨ Build Failed! Run the following command to debug manually:"
                echo "docker exec -it aprofi_fastapi_test_server /bin/sh"
                echo "docker exec -it aprofi_postgres_test_server psql -U labchain -d aprofi_db_test_server"
            }
        }
        always {
            echo "ðŸ”„ Build process finished, regardless of outcome."
            sh 'rm -f .env'
        }
    }

}
